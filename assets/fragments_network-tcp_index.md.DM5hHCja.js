import{_ as a,c as t,o as r,b0 as n}from"./chunks/framework.DkkuMtpH.js";const p=JSON.parse('{"title":"TCP为什么是3次握手","description":"","frontmatter":{},"headers":[],"relativePath":"fragments/network-tcp/index.md","filePath":"fragments/network-tcp/index.md"}'),i={name:"fragments/network-tcp/index.md"};function o(l,e,s,c,d,_){return r(),t("div",null,e[0]||(e[0]=[n('<h1 id="tcp为什么是3次握手" tabindex="-1">TCP为什么是3次握手 <a class="header-anchor" href="#tcp为什么是3次握手" aria-label="Permalink to &quot;TCP为什么是3次握手&quot;">​</a></h1><h2 id="为什么不是2次握手" tabindex="-1">为什么不是2次握手 <a class="header-anchor" href="#为什么不是2次握手" aria-label="Permalink to &quot;为什么不是2次握手&quot;">​</a></h2><ul><li>如果客户端发送的SYN报文因网络延迟滞留，客户端会重发新的SYN。若两次握手即建立连接，服务端可能误将延迟的旧SYN当作新请求，导致资源浪费</li><li>服务端回复SYN-ACK后，若客户端未回复ACK，服务端无法确认客户端是否真的收到了自己的响应。此时服务端可能盲目分配资源</li></ul><h2 id="为什么不是4次握手" tabindex="-1">为什么不是4次握手 <a class="header-anchor" href="#为什么不是4次握手" aria-label="Permalink to &quot;为什么不是4次握手&quot;">​</a></h2><ul><li>三次握手已足够让双方同步初始序列号（ISN）和确认通信能力，第四次握手只会增加延迟，无实质收益。</li></ul>',5)]))}const m=a(i,[["render",o]]);export{p as __pageData,m as default};
