import{_ as e,c as t,o as a,b0 as c}from"./chunks/framework.yGdRLqI0.js";const k=JSON.parse('{"title":"React Hook使用条件","description":"","frontmatter":{},"headers":[],"relativePath":"react/hook-condition/index.md","filePath":"react/hook-condition/index.md"}'),n={name:"react/hook-condition/index.md"};function r(i,o,s,d,l,_){return a(),t("div",null,o[0]||(o[0]=[c('<h1 id="react-hook使用条件" tabindex="-1">React Hook使用条件 <a class="header-anchor" href="#react-hook使用条件" aria-label="Permalink to &quot;React Hook使用条件&quot;">​</a></h1><p>React 依赖 Hook 的调用顺序来正确追踪组件的状态，每次组件渲染时，React 会按顺序记录 Hook 的调用，并建立一种隐式的“链表”结构</p><p>由于函数组件没有实例（不像 <code>Class</code> 组件有 <code>this.state</code>），React 必须依赖<code>Hook</code> 的调用顺序 来正确关联状态。</p><ul><li><strong>函数组件的特性</strong>：每次渲染都是全新的执行，没有实例存储状态。</li><li><strong>依赖调用顺序</strong>：通过固定的顺序匹配状态，避免混乱。</li><li><strong>链表的高效性</strong>：快速遍历、动态更新，同时保持顺序稳定。</li></ul>',4)]))}const h=e(n,[["render",r]]);export{k as __pageData,h as default};
