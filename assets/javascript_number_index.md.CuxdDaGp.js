import{_ as i,c as a,o as t,b0 as e}from"./chunks/framework.DkkuMtpH.js";const c=JSON.parse('{"title":"整数和浮点数","description":"","frontmatter":{},"headers":[],"relativePath":"javascript/number/index.md","filePath":"javascript/number/index.md"}'),p={name:"javascript/number/index.md"};function n(l,s,h,r,k,d){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="整数和浮点数" tabindex="-1">整数和浮点数 <a class="header-anchor" href="#整数和浮点数" aria-label="Permalink to &quot;整数和浮点数&quot;">​</a></h1><h2 id="数值精度" tabindex="-1">数值精度 <a class="header-anchor" href="#数值精度" aria-label="Permalink to &quot;数值精度&quot;">​</a></h2><p>JavaScript 内部，所有数字都是以64位浮点数形式储存，即使整数也是如此。所以，<code>1</code>与<code>1.0</code>是相同的，是同一个数</p><p>JavaScript 语言的底层根本没有整数，所有数字都是小数</p><p>由于浮点数不是精确的值，所以涉及小数的比较和运算要特别小心。</p><p>JavaScript 浮点数的64个二进制位，从最左边开始，是这样组成的。</p><ul><li>第1位：符号位，<code>0</code>表示正数，<code>1</code>表示负数</li><li>第2位到第12位（共11位）：指数部分</li><li>第13位到第64位（共52位）：小数部分（即有效数字）</li></ul><p><strong>精度最多只能到53个二进制位，这意味着，绝对值小于2的53次方的整数，即-2<sup>53</sup> + 1 到 2<sup>53</sup> - 1，都可以精确表示</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">53</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 9007199254740992</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">53</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 9007199254740992</span></span></code></pre></div><p>上面代码中，大于2的53次方以后，整数运算的结果开始出现错误</p><h2 id="数值范围" tabindex="-1">数值范围 <a class="header-anchor" href="#数值范围" aria-label="Permalink to &quot;数值范围&quot;">​</a></h2><p>JavaScript 能够表示的数值范围为2<sup>1024</sup>到2<sup>-1023</sup>（开区间）,超出这个范围的数无法表示,为<code>Infinity</code></p>`,12)]))}const E=i(p,[["render",n]]);export{c as __pageData,E as default};
